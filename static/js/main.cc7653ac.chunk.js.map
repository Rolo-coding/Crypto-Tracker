{"version":3,"sources":["routes/Price.tsx","api.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["Price","BASE_URL","fetchCoins","a","fetch","json","coinId","endDate","Math","floor","Date","now","startDate","Chart","useQuery","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","labels","xaxis","axisBorder","axisTicks","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Container","styled","div","Header","header","Title","h1","props","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","element","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","id","src","toLowerCase","alt","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"uNAIeA,MAJf,WACE,OAAO,wC,yBCDHC,EAAW,iCAEV,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACeC,MAAM,GAAD,OAAIH,EAAJ,WADpB,8BAC2CI,OAD3C,oF,kEAIA,WAA6BC,GAA7B,SAAAH,EAAA,sEACeC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBK,IAD1C,8BACqDD,OADrD,oF,kEAIA,WAAgCC,GAAhC,SAAAH,EAAA,sEACeC,MAAM,GAAD,OAAIH,EAAJ,oBAAwBK,IAD5C,8BACuDD,OADvD,oF,kEAIA,WAAgCC,GAAhC,iBAAAH,EAAA,6DACCI,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAFvB,SAIGH,MAAM,GAAD,OACNH,EADM,kBACYK,EADZ,mCAC6CM,EAD7C,gBAC8DL,IALtE,8BAOHF,OAPG,oF,2CCgFQQ,I,kBAAAA,EA3Ef,YAAwC,IAAvBP,EAAsB,EAAtBA,OACf,EAA4BQ,mBAC1B,CAAC,QAASR,IACV,kBDRG,SAAP,kCCQUS,CAAiBT,KACvB,CACEU,gBAAiB,MAJbC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAOnB,OACE,8BACGD,EACC,mBAEA,cAAC,IAAD,CACEE,KAAK,OACLC,OAAQ,CACN,CACEC,KAAM,QACNH,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMI,KAAI,SAAAC,GAAK,OAAIA,EAAMC,WAGnCC,QAAS,CACPC,MAAO,CACLC,KAAM,QAERC,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,KAAM,CACJF,MAAM,GAERG,OAAQ,CACNC,MAAO,SACPN,MAAO,GAETO,MAAO,CACLC,OAAQ,CACNN,MAAM,IAGVO,MAAO,CACLC,WAAY,CACVR,MAAM,GAERS,UAAW,CACTT,MAAM,GAERM,OAAQ,CACNN,MAAM,GAERb,KAAM,WACNuB,WAAU,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMI,KAAI,SAAAC,GAAK,OAAIA,EAAMoB,eAEvCC,KAAM,CACJzB,KAAM,WACN0B,SAAU,CAAEC,iBAAkB,CAAC,WAAYC,MAAO,CAAC,EAAG,OAExDC,OAAQ,CAAC,WACTC,QAAS,CACPC,EAAG,CACDC,UAAW,SAAAC,GAAK,iBAAQA,EAAMC,QAAQ,aC3EhDC,EAAYC,IAAOC,IAAV,wFAKTC,EAASF,IAAOG,OAAV,mHAONC,EAAQJ,IAAOK,GAAV,+DAEA,SAAAC,GAAK,OAAIA,EAAMnC,MAAMoC,eAE1BC,EAASR,IAAOS,KAAV,sEAKNC,EAAWV,IAAOC,IAAV,yKAORU,EAAeX,IAAOC,IAAV,kOAWZW,EAAcZ,IAAOa,EAAV,iDAIXC,EAAOd,IAAOC,IAAV,2HAOJc,EAAMf,IAAOS,KAAV,gQAQE,SAAAH,GAAK,OACZA,EAAMU,SAAWV,EAAMnC,MAAMoC,YAAcD,EAAMnC,MAAM8C,aA4J5CC,I,cAAAA,EA7Ef,WACE,IAAQnE,EAAWoE,cAAXpE,OACAqE,EAAUC,cAAVD,MACFE,EAAaC,YAAS,kBACtBC,EAAaD,YAAS,kBAC5B,EAAmDhE,mBACjD,CAAC,OAAQR,IACT,kBFpJG,SAAP,kCEoJU0E,CAAc1E,MAFH2E,EAAnB,EAAQhE,UAA8BiE,EAAtC,EAAgChE,KAIhC,EAAyDJ,mBACvD,CAAC,UAAWR,IACZ,kBFpJG,SAAP,kCEoJU6E,CAAiB7E,KACvB,CACEU,gBAAiB,MAJFoE,EAAnB,EAAQnE,UAAiCoE,EAAzC,EAAmCnE,KAO7BoE,EAAUL,GAAeG,EAC/B,OACE,eAAC9B,EAAD,WACE,cAACiC,EAAA,EAAD,UACE,gCACQ,OAALZ,QAAK,IAALA,KAAOtD,KAAOsD,EAAMtD,KAAOiE,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU7D,SAGnE,cAACoC,EAAD,UACE,cAACE,EAAD,UACQ,OAALgB,QAAK,IAALA,KAAOtD,KAAOsD,EAAMtD,KAAOiE,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAU7D,SAGlEiE,EACC,cAACvB,EAAD,yBAEA,qCACE,eAACE,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAUM,UAEnB,eAACtB,EAAD,WACE,2CACA,4CAAQgB,QAAR,IAAQA,OAAR,EAAQA,EAAUO,aAEpB,eAACvB,EAAD,WACE,0CACA,4CAAQmB,QAAR,IAAQA,OAAR,EAAQA,EAAaK,OAAOC,IAAIpE,MAAM8B,QAAQ,YAGlD,cAACc,EAAD,iBAAce,QAAd,IAAcA,OAAd,EAAcA,EAAUU,cACxB,eAAC3B,EAAD,WACE,eAACC,EAAD,WACE,gDACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAaQ,kBAEtB,eAAC3B,EAAD,WACE,+CACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAaS,mBAGxB,eAACzB,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfQ,EAAf,SACE,cAAC,IAAD,CAAMgB,GAAG,QAAT,qBAEF,cAACzB,EAAD,CAAKC,SAAyB,OAAfM,EAAf,SACE,cAAC,IAAD,CAAMkB,GAAG,QAAT,wBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAO3F,OAAQA,gBClNlDgD,EAAYC,IAAOC,IAAV,wFAKTC,GAASF,IAAOG,OAAV,mHAONwC,GAAY3C,IAAO4C,GAAV,0BAET1B,GAAOlB,IAAO6C,GAAV,+RAEC,SAAAvC,GAAK,OAAIA,EAAMnC,MAAM2E,WAWjB,SAAAxC,GAAK,OAAIA,EAAMnC,MAAMoC,eAK9BH,GAAQJ,IAAOK,GAAV,+DAEA,SAAAC,GAAK,OAAIA,EAAMnC,MAAMoC,eAE1BC,GAASR,IAAOS,KAAV,sEAKNsC,GAAM/C,IAAOgD,IAAV,oFA+CMC,OA/Bf,WACE,MAA4B1F,mBAAkB,WAAYZ,GAAlDe,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACnB,OACE,eAAC,EAAD,WACE,cAACqE,EAAA,EAAD,UACE,4CAEF,cAAC,GAAD,UACE,cAAC,GAAD,sBAEDtE,EACC,cAAC,GAAD,yBAEA,cAACiF,GAAD,iBACGhF,QADH,IACGA,OADH,EACGA,EAAMuF,MAAM,EAAG,IAAInF,KAAI,SAAAoF,GAAI,OAC1B,cAAC,GAAD,UACE,eAAC,IAAD,CAAMX,GAAE,WAAMW,EAAKC,IAAMhC,MAAO,CAAEtD,KAAMqF,EAAKrF,MAA7C,UACE,cAACiF,GAAD,CACEM,IAAG,oDAA+CF,EAAKjB,OAAOoB,eAC9DC,IAAI,cAELJ,EAAKrF,KALR,cADSqF,EAAKC,aC/DbI,I,GAAAA,GAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOf,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,Y,SCL3Be,GAAcC,YAAH,2mDAuDO,SAAApD,GAAK,OAAIA,EAAMnC,MAAM2E,WAChC,SAAAxC,GAAK,OAAIA,EAAMnC,MAAM8C,aAmBnB0C,OAVf,WACE,OACE,qCACE,cAACF,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,QCnEnCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,IAAD,CAAe1F,MCVc,CACjC2E,QAAS,UACT7B,UAAW,UACXV,YAAa,WDOT,SACE,cAAC,GAAD,UAIN4D,SAASC,eAAe,W","file":"static/js/main.cc7653ac.chunk.js","sourcesContent":["function Price() {\n  return <h1>Price</h1>\n}\n\nexport default Price\n","const BASE_URL = 'https://api.coinpaprika.com/v1'\n\nexport async function fetchCoins() {\n  return await (await fetch(`${BASE_URL}/coins`)).json()\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  return await (await fetch(`${BASE_URL}/coins/${coinId}`)).json()\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  return await (await fetch(`${BASE_URL}/tickers/${coinId}`)).json()\n}\n\nexport async function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000)\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2\n  return await (\n    await fetch(\n      `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n    )\n  ).json()\n}\n","import { useQuery } from 'react-query'\nimport { fetchCoinHistory } from '../api'\nimport ApexChart from 'react-apexcharts'\n\ninterface IHistorical {\n  time_open: string\n  time_close: string\n  open: number\n  high: number\n  low: number\n  close: number\n  volume: number\n  market_cap: number\n}\n\ninterface ChartProps {\n  coinId: string\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000\n    }\n  )\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: 'Price',\n              data: data?.map(price => price.close)\n            }\n          ]}\n          options={{\n            theme: {\n              mode: 'dark'\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false\n              },\n              background: 'transparent'\n            },\n            grid: {\n              show: false\n            },\n            stroke: {\n              curve: 'smooth',\n              width: 4\n            },\n            yaxis: {\n              labels: {\n                show: false\n              }\n            },\n            xaxis: {\n              axisBorder: {\n                show: false\n              },\n              axisTicks: {\n                show: false\n              },\n              labels: {\n                show: false\n              },\n              type: 'datetime',\n              categories: data?.map(price => price.time_close)\n            },\n            fill: {\n              type: 'gradient',\n              gradient: { gradientToColors: ['#0be881'], stops: [0, 100] }\n            },\n            colors: ['#0fbcf9'],\n            tooltip: {\n              y: {\n                formatter: value => `$${value.toFixed(2)}`\n              }\n            }\n          }}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Chart\n","import { Helmet } from 'react-helmet'\nimport { Routes, Route, useLocation, useParams, useMatch } from 'react-router'\nimport styled from 'styled-components'\nimport Price from './Price'\nimport Chart from './Chart'\nimport { Link } from 'react-router-dom'\nimport { useQuery } from 'react-query'\nimport { fetchCoinInfo, fetchCoinTickers } from '../api'\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.accentColor};\n`\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`\nconst Description = styled.p`\n  margin: 20px 0px;\n`\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${props =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`\n\ninterface RouteParams {\n  coinId: string\n}\n\ninterface RouteState {\n  state: {\n    name: string\n  }\n}\n\ninterface ITag {\n  coin_counter: number\n  ico_counter: number\n  id: string\n  name: string\n}\n\ninterface InfoData {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  is_new: boolean\n  is_active: boolean\n  type: string\n  tags: ITag[]\n  description: string\n  message: string\n  open_source: boolean\n  started_at: string\n  development_status: string\n  hardware_wallet: boolean\n  proof_type: string\n  org_structure: string\n  hash_algorithm: string\n  first_data_at: string\n  last_data_at: string\n}\n\ninterface PriceData {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  circulating_supply: number\n  total_supply: number\n  max_supply: number\n  beta_value: number\n  first_data_at: string\n  last_updated: string\n  quotes: {\n    USD: {\n      ath_date: string\n      ath_price: number\n      market_cap: number\n      market_cap_change_24h: number\n      percent_change_1h: number\n      percent_change_1y: number\n      percent_change_6h: number\n      percent_change_7d: number\n      percent_change_12h: number\n      percent_change_15m: number\n      percent_change_24h: number\n      percent_change_30d: number\n      percent_change_30m: number\n      percent_from_price_ath: number\n      price: number\n      volume_24h: number\n      volume_24h_change_24h: number\n    }\n  }\n}\n\nfunction Coin() {\n  const { coinId } = useParams() as unknown as RouteParams\n  const { state } = useLocation() as RouteState\n  const priceMatch = useMatch('/:coinId/price')\n  const chartMatch = useMatch('/:coinId/chart')\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId)\n  )\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000\n    }\n  )\n  const loading = infoLoading || tickersLoading\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(2)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to=\"chart\">Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to=\"price\">Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Routes>\n            <Route path=\"price\" element={<Price />}></Route>\n            <Route path=\"chart\" element={<Chart coinId={coinId} />}></Route>\n          </Routes>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default Coin\n","import { Helmet } from 'react-helmet'\nimport { useQuery } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { fetchCoins } from '../api'\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst CoinsList = styled.ul``\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${props => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 15px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${props => props.theme.accentColor};\n    }\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.accentColor};\n`\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`\n\ninterface ICoin {\n  id: string\n  name: string\n  symbol: string\n  rank: number\n  is_new: boolean\n  is_active: boolean\n  type: string\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins)\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 20).map(coin => (\n            <Coin key={coin.id}>\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                  alt=\"coin-logo\"\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  )\n}\n\nexport default Coins\n","import { HashRouter, Routes, Route } from 'react-router-dom'\nimport Coin from './routes/Coin'\nimport Coins from './routes/Coins'\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/:coinId/*\" element={<Coin />}></Route>\n        <Route path=\"/\" element={<Coins />}></Route>\n      </Routes>\n    </HashRouter>\n  )\n}\n\nexport default Router\n","import Router from './Router'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-weight: 300;\n    font-family: 'Source Sans Pro', sans-sarif;\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.textColor};\n    line-height: 1.2;\n  }\n  a {\n     text-decoration: none;\n     color: inherit;\n  }\n`\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ThemeProvider } from 'styled-components'\nimport App from './App'\nimport { theme } from './theme'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { DefaultTheme } from 'styled-components'\n\nexport const theme: DefaultTheme = {\n  bgColor: '#2f3640',\n  textColor: '#f5f6fa',\n  accentColor: '#8c7ae6'\n}\n"],"sourceRoot":""}